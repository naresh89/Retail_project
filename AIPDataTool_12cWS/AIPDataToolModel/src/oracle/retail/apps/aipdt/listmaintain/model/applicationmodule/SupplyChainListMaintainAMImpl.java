package oracle.retail.apps.aipdt.listmaintain.model.applicationmodule;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewObject;

import oracle.retail.apps.aipdt.common.Constants;
import oracle.retail.apps.aipdt.common.adfbc.AipdtApplicationModuleImpl;
import oracle.retail.apps.aipdt.common.adfbc.AipdtViewObjectImpl;
import oracle.retail.apps.aipdt.common.model.util.AipdtModelUtil;
import oracle.retail.apps.aipdt.common.model.util.StringUtil;
import oracle.retail.apps.aipdt.listmaintain.model.applicationmodule.common.SupplyChainListMaintainAM;
import oracle.retail.apps.aipdt.listmaintain.model.view.DtListHeadrVOImpl;
import oracle.retail.apps.aipdt.listmaintain.model.view.SupplychainListMaintainProgVOImpl;
import oracle.retail.apps.aipdt.listmaintain.model.view.SupplychainListMaintainProgVORowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 26 12:08:43 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SupplyChainListMaintainAMImpl extends AipdtApplicationModuleImpl implements SupplyChainListMaintainAM {
    /**
     * This is the default constructor (do not remove).
     */
    public SupplyChainListMaintainAMImpl() {
    }
    private static ADFLogger logger = ADFLogger.createADFLogger(SupplyChainListMaintainAMImpl.class);

    /**
     * Container's getter for DtListHeadrVO.
     * @return DtListHeadrVO
     */
    public DtListHeadrVOImpl getDtListHeadrVO() {
        return (DtListHeadrVOImpl) findViewObject("DtListHeadrVO");
    }

    /**
     * Container's getter for SupplychainListMaintainProgVO1.
     * @return SupplychainListMaintainProgVO1
     */
    public SupplychainListMaintainProgVOImpl getSupplychainListMaintainProgVO() {
        return (SupplychainListMaintainProgVOImpl) findViewObject("SupplychainListMaintainProgVO");
    }

    /**
     * Container's getter for DtListDetailROVO1.
     * @return DtListDetailROVO1
     */
    public AipdtViewObjectImpl getDtListDetailROVO() {
        return (AipdtViewObjectImpl) findViewObject("DtListDetailROVO");
    }

    /**
     * Invoked on the screen render
     * @param username
     */

    public void initMaintainListActivity(String userName) {
        try {
            ViewObject supplyChainListVo = null;
            Row supplyChainListRow = null;
            userName = AipdtModelUtil.getLoggedInUserName();

            supplyChainListVo = this.getSupplychainListMaintainProgVO();
            if (supplyChainListVo != null) {
                supplyChainListRow = supplyChainListVo.createRow();
                if (supplyChainListRow != null) {
                    supplyChainListRow.setAttribute(Constants.ROW_VAL_ATTR, Math.random());
                }
                supplyChainListVo.insertRow(supplyChainListRow);
            }

            DtListHeadrVOImpl dtListHeadrVO = getDtListHeadrVO();
            dtListHeadrVO.setWhereClause(Constants.RESET_WHERE_VALUE);
            dtListHeadrVO.executeQuery();
        } catch (Exception e) {
            e.printStackTrace();
            logger.info("Exception in initCreateListActivity" + e);
        }
    }

    /**
     * Invoked on the reset button click
     * @param null
     */

    public void onClickResetAction() {
        try {
            String userName = null;
            this.getDBTransaction().rollback();
            getDBTransaction().clearEntityCache(null);
            ViewObject supplyChainListVo = this.getSupplychainListMaintainProgVO();
            if (supplyChainListVo != null) {
                supplyChainListVo.executeEmptyRowSet();
            }
            userName = AipdtModelUtil.getLoggedInUserName();
            initMaintainListActivity(userName);
        } catch (Exception e) {
            e.printStackTrace();
            logger.info("Exception in onClickResetAction" + e);
        }
    }

    /**
     * Invoked on the search button click
     * @param null
     */

    public String onSearchClick() {
        String result = null;
        String workingLevel = null;
        String listName = null;
        String listPrivacy = null;
        try {
            StringBuilder whereClause = new StringBuilder();
            SupplychainListMaintainProgVOImpl supplychainListMaintainProgVO = getSupplychainListMaintainProgVO();
            DtListHeadrVOImpl dtListHeadrVO = getDtListHeadrVO();
        
            SupplychainListMaintainProgVORowImpl createSupplyRow =
                (SupplychainListMaintainProgVORowImpl) supplychainListMaintainProgVO.getCurrentRow();

            if (createSupplyRow != null) {
                workingLevel = createSupplyRow.getWorkingLevelAttr();
                listName = createSupplyRow.getListNameAttr();
                /* Commented by Arun - Need to be added in future*/
               // listPrivacy = createSupplyRow.getListPrivacyAttr();
            }
            dtListHeadrVO.setWhereClause(null);
            dtListHeadrVO.executeQuery();
            whereClause.append(Constants.WHERE_IS_DELETED_TYPE + workingLevel + Constants.SINGLE_QUOTE +
                               Constants.SPACE);
            if (listName != null) {
                whereClause.append(Constants.WHERE_NAME + listName + Constants.SINGLE_QUOTE + Constants.SPACE);
            }
            /* Commented by Arun - Need to be added in future*/
//            if (!StringUtil.isNullOrEmpty(listPrivacy)) {
//                whereClause.append(Constants.WHERE_PRIVACY + listPrivacy + Constants.SINGLE_QUOTE);
//            }
            dtListHeadrVO.setWhereClause(whereClause.toString());
            dtListHeadrVO.executeQuery();

            if (dtListHeadrVO.getRowCount() <= 0) {
                result = Constants.INVALID_SEARCH_CRITERIA;
            }
        } catch (Exception e) {
            e.printStackTrace();
            logger.info("Exception in onSearchClick" + e);
        }
        return result;
    }

    /**
     * Invoked on the list id click
     * @param listId
     */

    public void onfetchListDtls(oracle.jbo.domain.Number listId) {
        try {
            ViewObject detailsVo = this.getDtListDetailROVO();
            detailsVo.setWhereClause(null);
            detailsVo.applyViewCriteria(null);
            detailsVo.executeQuery();
            detailsVo.setNamedWhereClauseParam(Constants.LIST_ID_BIND, listId);
            detailsVo.executeQuery();
        } catch (Exception e) {
            e.printStackTrace();
            logger.info("Exception in onfetchListDtls" + e);
        }
    }

    /**
     * Invoked on the save button click
     * @param null
     */

    public String saveMaintainList() {
        String returnValue = null;
        try {
            DtListHeadrVOImpl dtListHeadrVO = getDtListHeadrVO();
            dtListHeadrVO.applyViewCriteria(null);
            dtListHeadrVO.executeQuery();
            dtListHeadrVO.getAllRowsInRange();
            Row slectedRows[] = dtListHeadrVO.getFilteredRows(Constants.UPDATE_IND_ATTR, Boolean.TRUE);
            for (Row curRow : slectedRows) {
                if (curRow != null) {
                    curRow.setAttribute(Constants.IS_DELETED_ATTR, Constants.YES);
                    curRow.setAttribute(Constants.UPDATE_USER_ATTR, AipdtModelUtil.getLoggedInUserName());
                    curRow.setAttribute(Constants.UPDATE_DATE_ATTR,
                                        AipdtModelUtil.getOracleJboDomainDate(new java.util.Date()));
                }
            }
            if (slectedRows.length <= 0) {
                returnValue = Constants.ERR_SELECT_LIST;
            }
            this.getDBTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
            logger.info("Exception in saveMaintainList" + e);
        }
        return returnValue;
    }
}

