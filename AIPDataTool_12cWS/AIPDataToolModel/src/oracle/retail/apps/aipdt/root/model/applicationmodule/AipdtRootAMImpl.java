package oracle.retail.apps.aipdt.root.model.applicationmodule;

import java.text.MessageFormat;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.server.ApplicationModuleImpl;

import oracle.retail.apps.aipdt.common.Constants;
import oracle.retail.apps.aipdt.common.adfbc.AipdtApplicationModuleImpl;
import oracle.retail.apps.aipdt.common.adfbc.AipdtViewObjectImpl;
import oracle.retail.apps.aipdt.common.exception.AipdtException;
import oracle.retail.apps.aipdt.common.model.util.AipdtModelUtil;
import oracle.retail.apps.aipdt.common.model.util.StringUtil;
import oracle.retail.apps.aipdt.common.model.view.DateParamVOImpl;
import oracle.retail.apps.aipdt.common.model.view.SystemParametersVOImpl;
import oracle.retail.apps.aipdt.common.model.view.SystemParametersVORowImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 24 17:06:53 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AipdtRootAMImpl extends AipdtApplicationModuleImpl {
    private static ADFLogger logger = ADFLogger.createADFLogger(AipdtRootAMImpl.class);
    /**
     * This is the default constructor (do not remove).
     */
    public AipdtRootAMImpl() {
    }
    
    private static String COLUMN_NAME = "name";

    /**
     * Container's getter for ReceivingCalendarAM.
     * @return ReceivingCalendarAM
     */
    public ApplicationModuleImpl getReceivingCalendarAM() {
        return (ApplicationModuleImpl)findApplicationModule("ReceivingCalendarAM");
    }

    /**
     * Container's getter for OnOffSaleSupplyAM.
     * @return OnOffSaleSupplyAM
     */
    public ApplicationModuleImpl getOnOffSaleSupplyAM() {
        return (ApplicationModuleImpl)findApplicationModule("OnOffSaleSupplyAM");
    }

    public boolean isBatchRunning(){
        if (logger.isInfo()) {
            logger.info(METHOD_START_LOG);
        }
        boolean isBatchRunning = false; 
        SystemParametersVOImpl systemParamVO = getSystemParamVO1();
        StringBuilder whereClause = new StringBuilder();
        whereClause.append(" UPPER(" + COLUMN_NAME + ") = UPPER('" + Constants.BATCH_LOCK + "') ");
        
        systemParamVO.setWhereClause(null);
        systemParamVO.setWhereClause(whereClause.toString());
        if (logger.isInfo()){
            logger.info(systemParamVO.getName()+":"+ systemParamVO.getQuery());
        }
        SystemParametersVORowImpl row = (SystemParametersVORowImpl)systemParamVO.first();
        if(row != null && row.getValue() != null){
            isBatchRunning = StringUtil.getBooleanFromString(row.getValue()) ;
        }
        if (logger.isSevere()) {
            logger.severe("isBatchRunning:" + isBatchRunning);
        }
        if (logger.isInfo()) {
            logger.info(METHOD_END_LOG);
        }
        return isBatchRunning;
    }

    /**
     * Container's getter for SystemParamVO1.
     * @return SystemParamVO1
     */
    public SystemParametersVOImpl getSystemParamVO1() {
        return (SystemParametersVOImpl)findViewObject("SystemParamVO1");
    }

    /**
     * Container's getter for SupplyChainListAM.
     * @return SupplyChainListAM
     */
    public ApplicationModuleImpl getSupplyChainListAM() {
        return (ApplicationModuleImpl)findApplicationModule("SupplyChainListAM");
    }

    /**
     * Container's getter for ExceptionsAM.
     * @return ExceptionsAM
     */
    public ApplicationModuleImpl getExceptionsAM() {
        return (ApplicationModuleImpl)findApplicationModule("ExceptionsAM");
    }

    /**
     * Container's getter for WorkingGroupAM.
     * @return WorkingGroupAM
     */
    public ApplicationModuleImpl getWorkingGroupAM() {
        return (ApplicationModuleImpl)findApplicationModule("WorkingGroupAM");
    }


    /**
     * Container's getter for DeploymentTypeAM.
     * @return DeploymentTypeAM
     */
    public ApplicationModuleImpl getDeploymentTypeAM() {
        return (ApplicationModuleImpl)findApplicationModule("DeploymentTypeAM");
    }
    
    /**
     * Container's getter for SupplyChainListCreationAM.
     * @return SupplyChainListCreationAM
     */
    public ApplicationModuleImpl getSupplyChainListCreationAM() {
        return (ApplicationModuleImpl)findApplicationModule("SupplyChainListCreationAM");
    }

    /**
     * Container's getter for NetworkPathAM1.
     * @return NetworkPathAM1
     */
    public ApplicationModuleImpl getNetworkPathAM() {
        return (ApplicationModuleImpl)findApplicationModule("NetworkPathAM");
    }
    
    /**
     * Container's getter for DateParamVO1.
     * @return DateParamVO1
     */
    public DateParamVOImpl getDateParamVO1() {
        return (DateParamVOImpl)findViewObject("DateParamVO1");
    }

    /**
     * Container's getter for DtSystemParametersVO1.
     * @return DtSystemParametersVO1
     */
    public AipdtViewObjectImpl getDtSystemParametersVO1() {
        return (AipdtViewObjectImpl) findViewObject("DtSystemParametersVO1");
    }

    /**
     * Container's getter for CrossDockSetupAM
     * @return CrossDockSetupAM
     */
    public ApplicationModuleImpl getCrossDockSetupAM() {
        return (ApplicationModuleImpl) findApplicationModule("CrossDockSetupAM");
    }

    /**
     * Container's getter for SupplyChainListMaintainAM1.
     * @return SupplyChainListMaintainAM1
     */
    public ApplicationModuleImpl getSupplyChainListMaintainAM() {
        return (ApplicationModuleImpl) findApplicationModule("SupplyChainListMaintainAM");
    }

    /**
     * Container's getter for WhStPriorityMatrixAM1.
     * @return WhStPriorityMatrixAM1
     */
    public ApplicationModuleImpl getWhStPriorityMatrixAM() {
        return (ApplicationModuleImpl) findApplicationModule("WhStPriorityMatrixAM");
    }

    /**
     * Container's getter for XDOrderScheduleAM1.
     * @return XDOrderScheduleAM1
     */
    public ApplicationModuleImpl getXDOrderScheduleAM() {
        return (ApplicationModuleImpl) findApplicationModule("XDOrderScheduleAM");
    }

    /**
     * Container's getter for CorporateNonPlanningDaysAM1.
     * @return CorporateNonPlanningDaysAM1
     */
    public ApplicationModuleImpl getCorporateNonPlanningDaysAM() {
        return (ApplicationModuleImpl) findApplicationModule("CorporateNonPlanningDaysAM");
    }

    /**
     * Container's getter for RsOrderScheduleAM1.
     * @return RsOrderScheduleAM1
     */
    public ApplicationModuleImpl getRsOrderScheduleAM() {
        return (ApplicationModuleImpl) findApplicationModule("RsOrderScheduleAM");
    }
}
