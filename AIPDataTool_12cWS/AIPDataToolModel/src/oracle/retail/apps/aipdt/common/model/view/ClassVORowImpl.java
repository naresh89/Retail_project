package oracle.retail.apps.aipdt.common.model.view;

import java.math.BigDecimal;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;

import oracle.retail.apps.aipdt.common.adfbc.AipdtViewRowImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 08 18:54:10 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ClassVORowImpl extends AipdtViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ClassCode {
            public Object get(ClassVORowImpl obj) {
                return obj.getClassCode();
            }

            public void put(ClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ClassName {
            public Object get(ClassVORowImpl obj) {
                return obj.getClassName();
            }

            public void put(ClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ClassId {
            public Object get(ClassVORowImpl obj) {
                return obj.getClassId();
            }

            public void put(ClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DeparmentId {
            public Object get(ClassVORowImpl obj) {
                return obj.getDeparmentId();
            }

            public void put(ClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Id {
            public Object get(ClassVORowImpl obj) {
                return obj.getId();
            }

            public void put(ClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ClassVORowImpl object);

        public abstract void put(ClassVORowImpl object, Object value);

        public int index() {
            return ClassVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return ClassVORowImpl.AttributesEnum.firstIndex() + ClassVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = ClassVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLASSCODE = AttributesEnum.ClassCode.index();
    public static final int CLASSNAME = AttributesEnum.ClassName.index();
    public static final int CLASSID = AttributesEnum.ClassId.index();
    public static final int DEPARMENTID = AttributesEnum.DeparmentId.index();
    public static final int ID = AttributesEnum.Id.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ClassVORowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute ClassCode.
     * @return the ClassCode
     */
    public String getClassCode() {
        return (String) getAttributeInternal(CLASSCODE);
    }


    /**
     * Gets the attribute value for the calculated attribute ClassName.
     * @return the ClassName
     */
    public String getClassName() {
        return (String) getAttributeInternal(CLASSNAME);
    }


    /**
     * Gets the attribute value for the calculated attribute ClassId.
     * @return the ClassId
     */
    public Number getClassId() {
        return (Number) getAttributeInternal(CLASSID);
    }

    /**
     * Gets the attribute value for the calculated attribute DeparmentId.
     * @return the DeparmentId
     */
    public BigDecimal getDeparmentId() {
        return (BigDecimal) getAttributeInternal(DEPARMENTID);
    }


    /**
     * Gets the attribute value for the calculated attribute Id.
     * @return the Id
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
