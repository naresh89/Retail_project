package oracle.retail.apps.aipdt.common.model.view;

import java.math.BigDecimal;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;

import oracle.retail.apps.aipdt.common.adfbc.AipdtViewRowImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 08 19:27:16 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CommodityVORowImpl extends AipdtViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DepartmentId {
            public Object get(CommodityVORowImpl obj) {
                return obj.getDepartmentId();
            }

            public void put(CommodityVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SkuCode {
            public Object get(CommodityVORowImpl obj) {
                return obj.getSkuCode();
            }

            public void put(CommodityVORowImpl obj, Object value) {
                obj.setSkuCode((String) value);
            }
        }
        ,
        SkuShortDesc {
            public Object get(CommodityVORowImpl obj) {
                return obj.getSkuShortDesc();
            }

            public void put(CommodityVORowImpl obj, Object value) {
                obj.setSkuShortDesc((String) value);
            }
        }
        ,
        SkuId {
            public Object get(CommodityVORowImpl obj) {
                return obj.getSkuId();
            }

            public void put(CommodityVORowImpl obj, Object value) {
                obj.setSkuId((Number) value);
            }
        }
        ,
        Id {
            public Object get(CommodityVORowImpl obj) {
                return obj.getId();
            }

            public void put(CommodityVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CommodityVORowImpl object);

        public abstract void put(CommodityVORowImpl object, Object value);

        public int index() {
            return oracle.retail.apps.aipdt.common.model.view.CommodityVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return oracle.retail.apps.aipdt.common.model.view.CommodityVORowImpl.AttributesEnum.firstIndex() + oracle.retail.apps.aipdt.common.model.view.CommodityVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = oracle.retail.apps.aipdt.common.model.view.CommodityVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int SKUCODE = AttributesEnum.SkuCode.index();
    public static final int SKUSHORTDESC = AttributesEnum.SkuShortDesc.index();
    public static final int SKUID = AttributesEnum.SkuId.index();
    public static final int ID = AttributesEnum.Id.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CommodityVORowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute SkuId.
     * @return the SkuId
     */
    public Number getSkuId() {
        return (Number) getAttributeInternal(SKUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SkuId.
     * @param value value to set the  SkuId
     */
    public void setSkuId(Number value) {
        setAttributeInternal(SKUID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DepartmentId.
     * @return the DepartmentId
     */
    public Integer getDepartmentId() {
        return (Integer) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Gets the attribute value for the calculated attribute SkuCode.
     * @return the SkuCode
     */
    public String getSkuCode() {
        return (String) getAttributeInternal(SKUCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SkuCode.
     * @param value value to set the  SkuCode
     */
    public void setSkuCode(String value) {
        setAttributeInternal(SKUCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SkuShortDesc.
     * @return the SkuShortDesc
     */
    public String getSkuShortDesc() {
        return (String) getAttributeInternal(SKUSHORTDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SkuShortDesc.
     * @param value value to set the  SkuShortDesc
     */
    public void setSkuShortDesc(String value) {
        setAttributeInternal(SKUSHORTDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Id.
     * @return the Id
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
