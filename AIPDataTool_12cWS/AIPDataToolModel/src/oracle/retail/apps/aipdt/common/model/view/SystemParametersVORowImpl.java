package oracle.retail.apps.aipdt.common.model.view;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;

import oracle.retail.apps.aipdt.common.adfbc.AipdtViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 08 10:47:42 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SystemParametersVORowImpl extends AipdtViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ParameterId,
        Name,
        Value,
        Description;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return SystemParametersVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return SystemParametersVORowImpl.AttributesEnum.firstIndex() + SystemParametersVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = SystemParametersVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int PARAMETERID = AttributesEnum.ParameterId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int VALUE = AttributesEnum.Value.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SystemParametersVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ParameterId.
     * @return the ParameterId
     */
    public Number getParameterId() {
        return (Number)getAttributeInternal(PARAMETERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ParameterId.
     * @param value value to set the  ParameterId
     */
    public void setParameterId(Number value) {
        setAttributeInternal(PARAMETERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Name.
     * @return the Name
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Name.
     * @param value value to set the  Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Value.
     * @return the Value
     */
    public String getValue() {
        return (String) getAttributeInternal(VALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Value.
     * @param value value to set the  Value
     */
    public void setValue(String value) {
        setAttributeInternal(VALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Description.
     * @return the Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Description.
     * @param value value to set the  Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }
}
