package oracle.retail.apps.aipdt.common.model.view;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;

import oracle.retail.apps.aipdt.common.adfbc.AipdtViewRowImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 21 17:41:02 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SupplierVORowImpl extends AipdtViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SupplierCode {
            public Object get(SupplierVORowImpl obj) {
                return obj.getSupplierCode();
            }

            public void put(SupplierVORowImpl obj, Object value) {
                obj.setSupplierCode((String)value);
            }
        }
        ,
        SupplierId {
            public Object get(SupplierVORowImpl obj) {
                return obj.getSupplierId();
            }

            public void put(SupplierVORowImpl obj, Object value) {
                obj.setSupplierId((Number)value);
            }
        }
        ,
        SupplierName {
            public Object get(SupplierVORowImpl obj) {
                return obj.getSupplierName();
            }

            public void put(SupplierVORowImpl obj, Object value) {
                obj.setSupplierName((String)value);
            }
        }
        ,
        Id {
            public Object get(SupplierVORowImpl obj) {
                return obj.getId();
            }

            public void put(SupplierVORowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        IsDirectSupply {
            public Object get(SupplierVORowImpl obj) {
                return obj.getIsDirectSupply();
            }

            public void put(SupplierVORowImpl obj, Object value) {
                obj.setIsDirectSupply((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(SupplierVORowImpl object);

        public abstract void put(SupplierVORowImpl object, Object value);

        public int index() {
            return SupplierVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return SupplierVORowImpl.AttributesEnum.firstIndex() + SupplierVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = SupplierVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SUPPLIERCODE = AttributesEnum.SupplierCode.index();
    public static final int SUPPLIERID = AttributesEnum.SupplierId.index();
    public static final int SUPPLIERNAME = AttributesEnum.SupplierName.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int ISDIRECTSUPPLY = AttributesEnum.IsDirectSupply.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SupplierVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SupplierCode.
     * @return the SupplierCode
     */
    public String getSupplierCode() {
        return (String) getAttributeInternal(SUPPLIERCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SupplierCode.
     * @param value value to set the  SupplierCode
     */
    public void setSupplierCode(String value) {
        setAttributeInternal(SUPPLIERCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SupplierId.
     * @return the SupplierId
     */
    public Number getSupplierId() {
        return (Number) getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SupplierId.
     * @param value value to set the  SupplierId
     */
    public void setSupplierId(Number value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SupplierName.
     * @return the SupplierName
     */
    public String getSupplierName() {
        return (String) getAttributeInternal(SUPPLIERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SupplierName.
     * @param value value to set the  SupplierName
     */
    public void setSupplierName(String value) {
        setAttributeInternal(SUPPLIERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Id.
     * @return the Id
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Id.
     * @param value value to set the  Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IsDirectSupply.
     * @return the IsDirectSupply
     */
    public String getIsDirectSupply() {
        return (String) getAttributeInternal(ISDIRECTSUPPLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IsDirectSupply.
     * @param value value to set the  IsDirectSupply
     */
    public void setIsDirectSupply(String value) {
        setAttributeInternal(ISDIRECTSUPPLY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
