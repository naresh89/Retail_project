package oracle.retail.apps.aipdt.common.model.view;

import java.math.BigDecimal;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;

import oracle.retail.apps.aipdt.common.adfbc.AipdtViewRowImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 08 19:24:33 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SubClassVORowImpl extends AipdtViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SubclassCode {
            public Object get(SubClassVORowImpl obj) {
                return obj.getSubclassCode();
            }

            public void put(SubClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SubclassDescription {
            public Object get(SubClassVORowImpl obj) {
                return obj.getSubclassDescription();
            }

            public void put(SubClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SubclassId {
            public Object get(SubClassVORowImpl obj) {
                return obj.getSubclassId();
            }

            public void put(SubClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ClassCode {
            public Object get(SubClassVORowImpl obj) {
                return obj.getClassCode();
            }

            public void put(SubClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ClassId {
            public Object get(SubClassVORowImpl obj) {
                return obj.getClassId();
            }

            public void put(SubClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DepartmentId {
            public Object get(SubClassVORowImpl obj) {
                return obj.getDepartmentId();
            }

            public void put(SubClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Id {
            public Object get(SubClassVORowImpl obj) {
                return obj.getId();
            }

            public void put(SubClassVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(SubClassVORowImpl object);

        public abstract void put(SubClassVORowImpl object, Object value);

        public int index() {
            return SubClassVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return SubClassVORowImpl.AttributesEnum.firstIndex() + SubClassVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = SubClassVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SUBCLASSCODE = AttributesEnum.SubclassCode.index();
    public static final int SUBCLASSDESCRIPTION = AttributesEnum.SubclassDescription.index();
    public static final int SUBCLASSID = AttributesEnum.SubclassId.index();
    public static final int CLASSCODE = AttributesEnum.ClassCode.index();
    public static final int CLASSID = AttributesEnum.ClassId.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int ID = AttributesEnum.Id.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SubClassVORowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute SubclassCode.
     * @return the SubclassCode
     */
    public String getSubclassCode() {
        return (String) getAttributeInternal(SUBCLASSCODE);
    }


    /**
     * Gets the attribute value for the calculated attribute SubclassDescription.
     * @return the SubclassDescription
     */
    public String getSubclassDescription() {
        return (String) getAttributeInternal(SUBCLASSDESCRIPTION);
    }


    /**
     * Gets the attribute value for the calculated attribute SubclassId.
     * @return the SubclassId
     */
    public Number getSubclassId() {
        return (Number) getAttributeInternal(SUBCLASSID);
    }

    /**
     * Gets the attribute value for the calculated attribute ClassCode.
     * @return the ClassCode
     */
    public String getClassCode() {
        return (String) getAttributeInternal(CLASSCODE);
    }


    /**
     * Gets the attribute value for the calculated attribute ClassId.
     * @return the ClassId
     */
    public Integer getClassId() {
        return (Integer) getAttributeInternal(CLASSID);
    }

    /**
     * Gets the attribute value for the calculated attribute DepartmentId.
     * @return the DepartmentId
     */
    public Integer getDepartmentId() {
        return (Integer) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Gets the attribute value for the calculated attribute Id.
     * @return the Id
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
